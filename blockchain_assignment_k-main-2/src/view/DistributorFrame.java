/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import blockchain_assignment.Blockchain_Assignment;
import controller.InventoryController;
import controller.OrderController;
import controller.TransactionController;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.security.Key;
import java.security.PrivateKey;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Base64;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Distributor;
import model.HealthcareProvider;
import model.Inventory;
import model.Manufacturer;
import model.Order;
import model.Transaction;
import util.Helper;
import util.KeyAccess;
import util.MySignature;
import util.RandomSecretKey;
import util.Symmetric;
import util.TransactionCollection;

/**
 *
 * @author vinie
 */
public class DistributorFrame extends javax.swing.JFrame {
//    private static User user;

//    private 
//    private static String userID;
    private static Distributor distributor;
    private static InventoryController inventoryController;
    private static OrderController orderController;
    private static TransactionController transactionController;

    /**
     * Creates new form ManufacturerFrame
     *
     * @param dp
     * @param ic // * @param inventoryController
     * @param oc
     */
    public DistributorFrame(Distributor dp, InventoryController ic, OrderController oc, TransactionController tc) {
        initComponents();
        distributor = dp;
        inventoryController = ic;
        orderController = oc;
        transactionController = tc;

        inventoryController.setFilename("src/Off_Chain/DistributorInventory");
        inventoryController.readFromFile();
        orderController.setFilename("src/Off_Chain/DistributorOrder");
        orderController.readFromFile();
        transactionController.setFilename("src/Off_Chain/TransactionPoolMD");
        transactionController.readFromFile();

        loadCompanyName();
        loadInventoryTable();
        loadOrderTable();
        loadTransactionTable();
        loadManufacturerComboBox();
        loadHealthcareProviderComboBox();
        loadSelectInventoryComboBox();
        loadHealthcareProvider();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    private void loadHealthcareProvider() {
        try {
            DefaultTableModel model = (DefaultTableModel) tableHealthcareProvider.getModel();
            model.setRowCount(0);

            for (HealthcareProvider hp : Blockchain_Assignment.healthcareProviderController.getAllHealthcareProviders()) {
                model.addRow(new Object[]{hp.getID(), hp.getName(), hp.getContact(), hp.getCode()});
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading distributor data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadCompanyName() {
        lblName.setText(distributor.getName()); // Set the company name to the label
    }

    private void loadInventoryTable() {
        try {
//            // Clear existing data in the table
            DefaultTableModel model = (DefaultTableModel) inventoryTable.getModel();
            DefaultTableModel model2 = (DefaultTableModel) selectInventoryTable.getModel();
            model.setRowCount(0);
            model2.setRowCount(0);

            ArrayList<Inventory> userInventory = inventoryController.getUserInventory(distributor.getID());
            // If no products created by the logged-in user were found, display "No products found"

            if (userInventory.isEmpty()) {
                model.addRow(new Object[]{"No products found"});
                model2.addRow(new Object[]{"No products found"});
            } else {
                for (Inventory i : userInventory) {
                    model.addRow(new Object[]{i.getID(), i.getUPC(), i.getProductName(), i.getBatchNumber(), Integer.toString(i.getQuantity())});
                    model2.addRow(new Object[]{i.getID(), i.getUPC(), i.getProductName(), i.getBatchNumber(), Integer.toString(i.getQuantity())});
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while updating product table: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadHealthcareProviderComboBox() {
        for (HealthcareProvider hp : Blockchain_Assignment.healthcareProviderController.getAllHealthcareProviders()) {
            healthcareProviderComboBox.addItem(hp.getID());
        }
    }

    private void loadSelectInventoryComboBox() {
        
        ArrayList<Inventory> userInventory = inventoryController.getUserInventory(distributor.getID());
        
        for (Inventory i : userInventory ) {
            selectInventoryComboBox.addItem(i.getID());
        }
    }

    private void loadOrderTable() {
        try {
//            // Clear existing data in the table
            DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
            model.setRowCount(0);

            ArrayList<Order> userOrder = orderController.getUserOrder(distributor.getID());

            // If no products created by the logged-in user were found, display "No products found"
            if (userOrder.isEmpty()) {
                model.addRow(new Object[]{"No products found"});
            } else {
                for (Order o : userOrder) {
                    model.addRow(new Object[]{o.getID(), o.getSellerID(), o.getOrderDate(), o.getOrderPrice(), o.getOrderStatus()});
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while updating product table: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadTransactionTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
            model.setRowCount(0);

            ArrayList<Transaction> userTransaction = transactionController.getUserTransaction(distributor.getID(), "003");

            if (userTransaction.isEmpty()) {
                model.addRow(new Object[]{"No transactions found"});
            } else {
                for (Transaction t : userTransaction) {
                    String[] data = t.getTransactionData().split("\\|");
                    String ID = t.getTransactionID();
                    String sender = data[1];
                    String UPC = data[3];
                    String batchCode = data[4];
                    String quantity = data[5];
                    String price = data[6];
                    model.addRow(new Object[]{ID, sender, UPC, batchCode, quantity, price});
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while updating transaction table: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadManufacturerComboBox() {
        for (Manufacturer m : Blockchain_Assignment.manufacturerController.getAllManufacturer()) {
            manufacturerComboBox.addItem(m.getID());
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabBooking = new javax.swing.JTabbedPane();
        pnlBookRoom3 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();
        lblRapidCar9 = new javax.swing.JLabel();
        manufacturerComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        selectedTransactionLabelValue = new javax.swing.JLabel();
        verifyTransactionButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        pnlBookRoom1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        inventoryTable = new javax.swing.JTable();
        btnViewBatch = new javax.swing.JButton();
        lblRapidCar6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        lblRapidCar8 = new javax.swing.JLabel();
        pnlBookRoom5 = new javax.swing.JPanel();
        tabDistribute1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        selectInventoryConfirmButton = new javax.swing.JButton();
        selectInventoryResetButoon = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        selectInventoryTable = new javax.swing.JTable();
        selectInventoryComboBox = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        selectReceiverConfirmButton = new javax.swing.JButton();
        selectReceiverResetButton = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        tableHealthcareProvider = new javax.swing.JTable();
        selectReceiverBackButton = new javax.swing.JButton();
        selectQuantityField = new javax.swing.JTextField();
        jLabel81 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        healthcareProviderComboBox = new javax.swing.JComboBox<>();
        selectPriceField = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        pnlBookRoom7 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        lblRapidCar11 = new javax.swing.JLabel();
        btnAddBatch1 = new javax.swing.JButton();
        btnConfirmDistribution = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        productNameSummaryLabel = new javax.swing.JLabel();
        batchCodeSummaryLabel = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        quantitySummaryLabel = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        hpNameSummaryLabel = new javax.swing.JLabel();
        hpIDSummaryLabel = new javax.swing.JLabel();
        btnClearAddPro6 = new javax.swing.JButton();
        jLabel82 = new javax.swing.JLabel();
        priceSummaryLabel = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        upcSummaryLabel = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        inventorySummaryLabel = new javax.swing.JLabel();
        lblRapidCar12 = new javax.swing.JLabel();
        pnlBookRoom4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableProducts2 = new javax.swing.JTable();
        lblRapidCar5 = new javax.swing.JLabel();
        btnBookingsAdd3 = new javax.swing.JButton();
        txtBookingID7 = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableProducts4 = new javax.swing.JTable();
        lblRapidCar7 = new javax.swing.JLabel();
        lblRapidCar2 = new javax.swing.JLabel();
        btnAddProduct1 = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabBooking.setBackground(new java.awt.Color(0, 204, 204));
        tabBooking.setForeground(new java.awt.Color(255, 255, 255));
        tabBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabBookingMouseClicked(evt);
            }
        });

        pnlBookRoom3.setBackground(new java.awt.Color(227, 235, 238));

        transactionTable.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Sender", "UPC", "Batch Number", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        transactionTable.setColumnSelectionAllowed(true);
        transactionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                transactionTableMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(transactionTable);
        transactionTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        lblRapidCar9.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar9.setFont(new java.awt.Font("Poppins Medium", 1, 24)); // NOI18N
        lblRapidCar9.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar9.setText("Verify");

        jLabel1.setText("Selected Transaction");

        selectedTransactionLabelValue.setText("-");

        verifyTransactionButton.setBackground(new java.awt.Color(0, 204, 204));
        verifyTransactionButton.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        verifyTransactionButton.setForeground(new java.awt.Color(255, 255, 255));
        verifyTransactionButton.setText("Verify");
        verifyTransactionButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                verifyTransactionButtonMouseClicked(evt);
            }
        });

        jLabel3.setText("Selected Manufacturer");

        javax.swing.GroupLayout pnlBookRoom3Layout = new javax.swing.GroupLayout(pnlBookRoom3);
        pnlBookRoom3.setLayout(pnlBookRoom3Layout);
        pnlBookRoom3Layout.setHorizontalGroup(
            pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookRoom3Layout.createSequentialGroup()
                .addGroup(pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBookRoom3Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRapidCar9)
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 845, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBookRoom3Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBookRoom3Layout.createSequentialGroup()
                                .addComponent(selectedTransactionLabelValue, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(verifyTransactionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10))
                            .addComponent(manufacturerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        pnlBookRoom3Layout.setVerticalGroup(
            pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookRoom3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblRapidCar9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(selectedTransactionLabelValue)
                    .addComponent(verifyTransactionButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBookRoom3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manufacturerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(94, 94, 94))
        );

        tabBooking.addTab("Verify", pnlBookRoom3);

        pnlBookRoom1.setBackground(new java.awt.Color(227, 235, 238));

        inventoryTable.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        inventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "UPC", "Product Name", "Batch Number", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventoryTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(inventoryTable);

        btnViewBatch.setBackground(new java.awt.Color(0, 204, 204));
        btnViewBatch.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnViewBatch.setForeground(new java.awt.Color(255, 255, 255));
        btnViewBatch.setText("View Batch");
        btnViewBatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnViewBatchMouseExited(evt);
            }
        });
        btnViewBatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBatchActionPerformed(evt);
            }
        });

        lblRapidCar6.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar6.setFont(new java.awt.Font("Poppins Medium", 1, 24)); // NOI18N
        lblRapidCar6.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar6.setText("Inventory");

        javax.swing.GroupLayout pnlBookRoom1Layout = new javax.swing.GroupLayout(pnlBookRoom1);
        pnlBookRoom1.setLayout(pnlBookRoom1Layout);
        pnlBookRoom1Layout.setHorizontalGroup(
            pnlBookRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookRoom1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(pnlBookRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBookRoom1Layout.createSequentialGroup()
                        .addComponent(lblRapidCar6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnViewBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(pnlBookRoom1Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))))
        );
        pnlBookRoom1Layout.setVerticalGroup(
            pnlBookRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookRoom1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlBookRoom1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewBatch, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRapidCar6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        tabBooking.addTab("Inventory", pnlBookRoom1);

        jPanel2.setBackground(new java.awt.Color(227, 235, 238));

        orderTable.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Seller ID", "Order Date", "Price", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(orderTable);

        lblRapidCar8.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar8.setFont(new java.awt.Font("Poppins Medium", 1, 24)); // NOI18N
        lblRapidCar8.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar8.setText("Order");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRapidCar8)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 842, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(lblRapidCar8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        tabBooking.addTab("Order", jPanel2);

        pnlBookRoom5.setBackground(new java.awt.Color(227, 235, 238));

        tabDistribute1.setBackground(new java.awt.Color(0, 204, 204));
        tabDistribute1.setForeground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(227, 235, 250));

        selectInventoryConfirmButton.setBackground(new java.awt.Color(0, 204, 204));
        selectInventoryConfirmButton.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        selectInventoryConfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        selectInventoryConfirmButton.setText("Confirm");
        selectInventoryConfirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectInventoryConfirmButtonMouseExited(evt);
            }
        });
        selectInventoryConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectInventoryConfirmButtonActionPerformed(evt);
            }
        });

        selectInventoryResetButoon.setBackground(new java.awt.Color(255, 153, 102));
        selectInventoryResetButoon.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        selectInventoryResetButoon.setForeground(new java.awt.Color(255, 255, 255));
        selectInventoryResetButoon.setText("Reset");
        selectInventoryResetButoon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectInventoryResetButoonMouseExited(evt);
            }
        });
        selectInventoryResetButoon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectInventoryResetButoonActionPerformed(evt);
            }
        });

        jLabel58.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel58.setText("Selected Inventory");

        selectInventoryTable.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        selectInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "UPC", "Product Name", "Batch Number", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        selectInventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectInventoryTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(selectInventoryTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectInventoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(selectInventoryConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectInventoryResetButoon)
                        .addGap(51, 51, 51))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectInventoryConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectInventoryResetButoon, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectInventoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        tabDistribute1.addTab("1- Select Inventory", jPanel3);

        jPanel4.setBackground(new java.awt.Color(227, 235, 250));

        selectReceiverConfirmButton.setBackground(new java.awt.Color(0, 204, 204));
        selectReceiverConfirmButton.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        selectReceiverConfirmButton.setForeground(new java.awt.Color(255, 255, 255));
        selectReceiverConfirmButton.setText("Confirm");
        selectReceiverConfirmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectReceiverConfirmButtonMouseExited(evt);
            }
        });
        selectReceiverConfirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectReceiverConfirmButtonActionPerformed(evt);
            }
        });

        selectReceiverResetButton.setBackground(new java.awt.Color(255, 153, 102));
        selectReceiverResetButton.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        selectReceiverResetButton.setForeground(new java.awt.Color(255, 255, 255));
        selectReceiverResetButton.setText("Reset");
        selectReceiverResetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectReceiverResetButtonMouseExited(evt);
            }
        });
        selectReceiverResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectReceiverResetButtonActionPerformed(evt);
            }
        });

        tableHealthcareProvider.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tableHealthcareProvider.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Company Name", "Contact Number", "Company Registration Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableHealthcareProvider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableHealthcareProviderMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tableHealthcareProviderMouseEntered(evt);
            }
        });
        jScrollPane13.setViewportView(tableHealthcareProvider);

        selectReceiverBackButton.setBackground(new java.awt.Color(255, 153, 102));
        selectReceiverBackButton.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        selectReceiverBackButton.setForeground(new java.awt.Color(255, 255, 255));
        selectReceiverBackButton.setText("Back");
        selectReceiverBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                selectReceiverBackButtonMouseExited(evt);
            }
        });
        selectReceiverBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectReceiverBackButtonActionPerformed(evt);
            }
        });

        selectQuantityField.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        selectQuantityField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        selectQuantityField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        selectQuantityField.setPreferredSize(new java.awt.Dimension(21, 28));
        selectQuantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectQuantityFieldActionPerformed(evt);
            }
        });

        jLabel81.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel81.setText("Quantity:");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jLabel2.setText("Healthcare Provider");

        selectPriceField.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        selectPriceField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        selectPriceField.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        selectPriceField.setPreferredSize(new java.awt.Dimension(21, 28));
        selectPriceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPriceFieldActionPerformed(evt);
            }
        });

        jLabel83.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel83.setText("Price per Item");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(healthcareProviderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel83))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(selectQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(78, 78, 78)
                                .addComponent(selectReceiverConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectReceiverResetButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selectReceiverBackButton))
                            .addComponent(jLabel81))
                        .addGap(64, 64, 64))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(29, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel81, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel83, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(healthcareProviderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectReceiverConfirmButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectReceiverBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectReceiverResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        tabDistribute1.addTab("2 - Select Receiver", jPanel4);

        pnlBookRoom7.setBackground(new java.awt.Color(227, 235, 250));

        jLabel59.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel59.setText("Healthcare Provider ID");

        lblRapidCar11.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar11.setFont(new java.awt.Font("Poppins Medium", 1, 24)); // NOI18N
        lblRapidCar11.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar11.setText("Summary");

        btnAddBatch1.setBackground(new java.awt.Color(255, 153, 102));
        btnAddBatch1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnAddBatch1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddBatch1.setText("Cancel");
        btnAddBatch1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddBatch1MouseExited(evt);
            }
        });
        btnAddBatch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBatch1ActionPerformed(evt);
            }
        });

        btnConfirmDistribution.setBackground(new java.awt.Color(0, 204, 204));
        btnConfirmDistribution.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnConfirmDistribution.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmDistribution.setText("Confirm");
        btnConfirmDistribution.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnConfirmDistributionMouseExited(evt);
            }
        });
        btnConfirmDistribution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmDistributionActionPerformed(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel69.setText("Product Name");

        productNameSummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        productNameSummaryLabel.setText("-");

        batchCodeSummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        batchCodeSummaryLabel.setText("-");

        jLabel73.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel73.setText("Batch No");

        jLabel75.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel75.setText("Quantity");

        jLabel76.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(0, 204, 204));
        jLabel76.setText("Receiver Details");

        jLabel77.setBackground(new java.awt.Color(0, 204, 204));
        jLabel77.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(0, 204, 204));
        jLabel77.setText("Product Details");

        quantitySummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        quantitySummaryLabel.setText("-");

        jLabel62.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel62.setText("Company Name");

        hpNameSummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        hpNameSummaryLabel.setText("-");

        hpIDSummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        hpIDSummaryLabel.setText("-");

        btnClearAddPro6.setBackground(new java.awt.Color(255, 153, 102));
        btnClearAddPro6.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnClearAddPro6.setForeground(new java.awt.Color(255, 255, 255));
        btnClearAddPro6.setText("Back");
        btnClearAddPro6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnClearAddPro6MouseExited(evt);
            }
        });
        btnClearAddPro6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAddPro6ActionPerformed(evt);
            }
        });

        jLabel82.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel82.setText("Price");

        priceSummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        priceSummaryLabel.setText("-");

        jLabel70.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel70.setText("UPC");

        upcSummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        upcSummaryLabel.setText("-");

        jLabel74.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel74.setText("Inventory ID");

        inventorySummaryLabel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        inventorySummaryLabel.setText("-");

        javax.swing.GroupLayout pnlBookRoom7Layout = new javax.swing.GroupLayout(pnlBookRoom7);
        pnlBookRoom7.setLayout(pnlBookRoom7Layout);
        pnlBookRoom7Layout.setHorizontalGroup(
            pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBookRoom7Layout.createSequentialGroup()
                        .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel77)
                            .addComponent(lblRapidCar11)
                            .addComponent(jLabel76)
                            .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(hpIDSummaryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                        .addComponent(hpNameSummaryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(82, 82, 82)
                                    .addComponent(btnConfirmDistribution, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnAddBatch1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnClearAddPro6))
                                .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel69)
                                        .addComponent(jLabel70))
                                    .addGap(18, 18, 18)
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(productNameSummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(upcSummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                                            .addGap(23, 23, 23)
                                            .addComponent(jLabel73)
                                            .addGap(45, 45, 45)
                                            .addComponent(batchCodeSummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel74)))
                                    .addGap(29, 29, 29)
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(quantitySummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel75))
                                    .addGap(52, 52, 52)
                                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel82)
                                        .addComponent(priceSummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(62, Short.MAX_VALUE))
                    .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(inventorySummaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(259, 259, 259))))
        );
        pnlBookRoom7Layout.setVerticalGroup(
            pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookRoom7Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblRapidCar11)
                .addGap(18, 18, 18)
                .addComponent(jLabel77)
                .addGap(18, 18, 18)
                .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                        .addComponent(jLabel82)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantitySummaryLabel)
                            .addComponent(priceSummaryLabel))
                        .addGap(18, 18, 18))
                    .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                        .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(batchCodeSummaryLabel)
                            .addComponent(jLabel73)
                            .addComponent(jLabel75)
                            .addComponent(jLabel69)
                            .addComponent(productNameSummaryLabel))
                        .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel70)
                                    .addComponent(upcSummaryLabel)))
                            .addGroup(pnlBookRoom7Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel74)
                                    .addComponent(inventorySummaryLabel))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jLabel76)
                .addGap(18, 18, 18)
                .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(hpIDSummaryLabel))
                .addGap(10, 10, 10)
                .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddBatch1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnConfirmDistribution, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClearAddPro6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBookRoom7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel62)
                        .addComponent(hpNameSummaryLabel)))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        tabDistribute1.addTab("3 - Distribute", pnlBookRoom7);

        lblRapidCar12.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar12.setFont(new java.awt.Font("Poppins Medium", 1, 24)); // NOI18N
        lblRapidCar12.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar12.setText("Distribute");

        javax.swing.GroupLayout pnlBookRoom5Layout = new javax.swing.GroupLayout(pnlBookRoom5);
        pnlBookRoom5.setLayout(pnlBookRoom5Layout);
        pnlBookRoom5Layout.setHorizontalGroup(
            pnlBookRoom5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookRoom5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRapidCar12)
                .addGap(761, 761, 761))
            .addGroup(pnlBookRoom5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabDistribute1, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBookRoom5Layout.setVerticalGroup(
            pnlBookRoom5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookRoom5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblRapidCar12)
                .addGap(18, 18, 18)
                .addComponent(tabDistribute1, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        tabBooking.addTab("Distribute Inventory", pnlBookRoom5);

        pnlBookRoom4.setBackground(new java.awt.Color(227, 235, 238));

        tableProducts2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tableProducts2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product ID", "Batch Code", "Quantity", "Consumer ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProducts2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProducts2MouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tableProducts2);

        lblRapidCar5.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar5.setFont(new java.awt.Font("Poppins Medium", 1, 24)); // NOI18N
        lblRapidCar5.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar5.setText("Inventory Distribution");

        btnBookingsAdd3.setBackground(new java.awt.Color(0, 204, 204));
        btnBookingsAdd3.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnBookingsAdd3.setForeground(new java.awt.Color(255, 255, 255));
        btnBookingsAdd3.setText("Search");
        btnBookingsAdd3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBookingsAdd3MouseExited(evt);
            }
        });
        btnBookingsAdd3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookingsAdd3ActionPerformed(evt);
            }
        });

        txtBookingID7.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        txtBookingID7.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtBookingID7.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        txtBookingID7.setPreferredSize(new java.awt.Dimension(21, 28));
        txtBookingID7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookingID7ActionPerformed(evt);
            }
        });

        tableProducts4.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tableProducts4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Unit ID", "Product ID", "Product Name", "Batch Code", "Quantity", "Consumer ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProducts4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProducts4MouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tableProducts4);

        lblRapidCar7.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar7.setFont(new java.awt.Font("Poppins Medium", 1, 18)); // NOI18N
        lblRapidCar7.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar7.setText("Details");

        javax.swing.GroupLayout pnlBookRoom4Layout = new javax.swing.GroupLayout(pnlBookRoom4);
        pnlBookRoom4.setLayout(pnlBookRoom4Layout);
        pnlBookRoom4Layout.setHorizontalGroup(
            pnlBookRoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBookRoom4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlBookRoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(pnlBookRoom4Layout.createSequentialGroup()
                        .addComponent(lblRapidCar7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookRoom4Layout.createSequentialGroup()
                        .addComponent(lblRapidCar5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, Short.MAX_VALUE)
                        .addComponent(txtBookingID7, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBookingsAdd3)))
                .addGap(22, 22, 22))
        );
        pnlBookRoom4Layout.setVerticalGroup(
            pnlBookRoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBookRoom4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(pnlBookRoom4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBookingsAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRapidCar5)
                    .addComponent(txtBookingID7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRapidCar7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        tabBooking.addTab("Inventory Distribution", pnlBookRoom4);

        lblRapidCar2.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar2.setFont(new java.awt.Font("Poppins Medium", 3, 24)); // NOI18N
        lblRapidCar2.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar2.setText("Distributor");

        btnAddProduct1.setBackground(new java.awt.Color(153, 0, 51));
        btnAddProduct1.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnAddProduct1.setForeground(new java.awt.Color(255, 255, 255));
        btnAddProduct1.setText("Logout");
        btnAddProduct1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAddProduct1MouseExited(evt);
            }
        });
        btnAddProduct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProduct1ActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lblName.setText("Company Name");

        lblName1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lblName1.setText("Welcome Back,");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tabBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblName1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblRapidCar2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 470, Short.MAX_VALUE)
                        .addComponent(btnAddProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRapidCar2)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnAddProduct1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblName1))))
                .addComponent(tabBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddProduct1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddProduct1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddProduct1MouseExited

    private void btnAddProduct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProduct1ActionPerformed
        this.setVisible(false);
        new LoginMenu(Blockchain_Assignment.manufacturerController, Blockchain_Assignment.distributorController, Blockchain_Assignment.healthcareProviderController).setVisible(true);
    }//GEN-LAST:event_btnAddProduct1ActionPerformed

    private void btnViewBatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBatchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewBatchActionPerformed

    private void btnViewBatchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnViewBatchMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewBatchMouseExited

    private void inventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryTableMouseClicked
        //        DefaultTableModel tableModel = (DefaultTableModel) inventoryTable.getModel();
        //        int selectedRow = inventoryTable.getSelectedRow();
        //
        //        if (selectedRow >= 0) {
        //            jLabel51.setText((String) tableModel.getValueAt(selectedRow, 0));
        //            String selectedProductId = (String) tableModel.getValueAt(selectedRow, 0);
        //            DefaultTableModel batchTableModel = (DefaultTableModel) tableBatch.getModel();
        //
        //            // Clear existing data in the table
        //            batchTableModel.setRowCount(0);
        //
        //            // Retrieve blockchain data
        //            Blockchain blockchain = Blockchain.getInstance("src/On_Chain/Blockchain.bin");
        //            LinkedList<Block> blockchainData = blockchain.get();
        //
        //            // Flag to track if any batch is found for the selected product ID
        //            boolean batchFound = false;
        //
        //            // Iterate through the blockchain to find batch info
        //            for (Block block : blockchainData) {
        //                TransactionCollection transactionCollection = block.getTransactionCollection();
        //                if (transactionCollection != null) {
        //                    ArrayList<String> transactions = transactionCollection.getTranxList();
        //                    for (String transaction : transactions) {
        //                        String[] transactionInfo = transaction.split("\\|");
        //                        if (transactionInfo.length >= 5 && transactionInfo[1].equals(selectedProductId)) {
        //                            // Batch info found for the selected product ID
        //                            batchFound = true;
        //                            String batchCode = transactionInfo[2];
        //                            String price = transactionInfo[3];
        //                            String dateAdded = transactionInfo[7];
        //                            String productionDate = transactionInfo[5];
        //                            String expiryDate = transactionInfo[6];
        //                            String quantity = transactionInfo[4];
        //
        //                            // Add batch info to the table
        //                            batchTableModel.addRow(new Object[]{batchCode, price, dateAdded, productionDate, expiryDate, quantity});
        //                        }
        //                    }
        //                }
        //            }
        //
        //            // If no batch is found, display a message in the table
        //            if (!batchFound) {
        //                batchTableModel.addRow(new Object[]{"No Batch Found", "", "", "", "", ""});
        //            }
        //        }
    }//GEN-LAST:event_inventoryTableMouseClicked

    private void orderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTableMouseClicked

    private void transactionTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_transactionTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tableModel = (DefaultTableModel) transactionTable.getModel();
        int selectedRow = transactionTable.getSelectedRow();
        if (selectedRow >= 0) {
            selectedTransactionLabelValue.setText((String) tableModel.getValueAt(selectedRow, 0));
        }

    }//GEN-LAST:event_transactionTableMouseClicked

    private void verifyTransactionButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_verifyTransactionButtonMouseClicked
        // TODO add your handling code here:

        try {
            String transactionID = selectedTransactionLabelValue.getText();
            System.out.println(transactionID);
            String selectedManufacturerID = (String) manufacturerComboBox.getSelectedItem();

            Manufacturer m = Blockchain_Assignment.manufacturerController.getManufacturer(selectedManufacturerID);

            Transaction transaction = transactionController.getTransaction(transactionID);
//            System.out.println(transaction.toString());

            boolean isVerified = Helper.userVerifyTransaction(transaction.toString(), m.getPublicKeyPath());

            if (!isVerified) {
                JOptionPane.showMessageDialog(this, "Signature is not valid");
                return;
            }
                
            Symmetric symm = new Symmetric();
            Key secretKey = RandomSecretKey.getSecretKey();
            TransactionCollection transactionCollection = new TransactionCollection();
            String encrypted = symm.encrypt(transaction.toString(), secretKey);
            transactionCollection.add(encrypted);

            boolean success = Helper.addBlock(transactionCollection);

            if (success) {

                String[] data = transaction.getTransactionData().split("\\|");
                String sender = data[1];
                String UPC = data[3];
                String batchNumber = data[4];
                int quantity = Integer.parseInt(data[5]);
                int price = Integer.parseInt(data[6]);
                String productName = data[7];

                inventoryController.addNewInventory(distributor.getID(), UPC, batchNumber, quantity, productName);
                orderController.addNewOrder(distributor.getID(), sender, LocalDate.now(), price, "RECEIVED");

                transactionController.removeTransaction(transactionID);
                loadTransactionTable();
                loadInventoryTable();
                loadSelectInventoryComboBox();
                loadOrderTable();

                JOptionPane.showMessageDialog(this, "Signature is valid. Transaction added to block");
                JOptionPane.showMessageDialog(this, "Inventory and order updated");
            } else {
                throw new Exception();
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_verifyTransactionButtonMouseClicked

    private void selectInventoryConfirmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectInventoryConfirmButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_selectInventoryConfirmButtonMouseExited

    private void selectInventoryConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectInventoryConfirmButtonActionPerformed
        DefaultTableModel batchTableModel = (DefaultTableModel) selectInventoryTable.getModel();

        String inventoryID = (String) selectInventoryComboBox.getSelectedItem();
        Inventory i = inventoryController.getSpecificInventory(inventoryID);

        if (i.getQuantity() == 0) {
            JOptionPane.showMessageDialog(this, "Inventory has no available stock.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        tabDistribute1.setSelectedIndex(1);
        tabDistribute1.setEnabledAt(0, false);
        tabDistribute1.setEnabledAt(2, false);
        productNameSummaryLabel.setText(i.getProductName());
        upcSummaryLabel.setText(i.getUPC());
        batchCodeSummaryLabel.setText(i.getBatchNumber());
        inventorySummaryLabel.setText(inventoryID);

//        }
    }//GEN-LAST:event_selectInventoryConfirmButtonActionPerformed

    private void selectInventoryResetButoonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectInventoryResetButoonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_selectInventoryResetButoonMouseExited

    private void selectInventoryResetButoonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectInventoryResetButoonActionPerformed
        selectInventoryTable.clearSelection();
//        jLabel57.setText("-");
    }//GEN-LAST:event_selectInventoryResetButoonActionPerformed

    private void selectReceiverConfirmButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectReceiverConfirmButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_selectReceiverConfirmButtonMouseExited

    private void selectReceiverConfirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectReceiverConfirmButtonActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) tableHealthcareProvider.getModel();
//        DefaultTableModel tableModel2 = (DefaultTableModel) tableHealthcareProvider.getModel();
//        DefaultTableModel tableModel3 = (DefaultTableModel) tableProducts2.getModel();
//        int selectedRow1 = tableBatch2.getSelectedRow();
        String hpID = (String) healthcareProviderComboBox.getSelectedItem();

        HealthcareProvider hp = Blockchain_Assignment.healthcareProviderController.getHealthcareProvider(hpID);

        String Quantity = selectQuantityField.getText();
        String price = selectPriceField.getText();

        try {
            int q = Integer.parseInt(Quantity);
            if (Quantity == null || Quantity.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Quantity.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String selectedInventoryID = inventorySummaryLabel.getText();
            Inventory selectedInventory = inventoryController.getSpecificInventory(selectedInventoryID);

            if (selectedInventory.getQuantity() - q < 0) {
                JOptionPane.showMessageDialog(this, "Quantity exceed available stock", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Double.parseDouble(price);
            if (price == null || price.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Price.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        int totalPrice = Integer.parseInt(Quantity) * Integer.parseInt(price);

        tabDistribute1.setSelectedIndex(2);
        tabDistribute1.setEnabledAt(0, false);
        tabDistribute1.setEnabledAt(1, false);

        hpIDSummaryLabel.setText(hpID);
        hpNameSummaryLabel.setText(hp.getName());
        quantitySummaryLabel.setText(Quantity);
        priceSummaryLabel.setText(Integer.toString(totalPrice));

//        jLabel68.setText((String) tableModel3.getValueAt(selectedRow1, 0));
//        productNameSummaryLabel.setText((String) tableModel3.getValueAt(selectedRow1, 1));
//        batchCodeSummaryLabel.setText((String) tableModel1.getValueAt(selectedRow1, 0));
//        jLabel74.setText((String) tableModel1.getValueAt(selectedRow1, 1));
//        quantitySummaryLabel.setText(Quantity);
//        priceSummaryLabel.setText(Integer.toString(totalPrice));
        //                jLabel80.setText((String) tableModel2.getValueAt(selectedRow1, 0));
        //                jLabel79.setText((String) tableModel2.getValueAt(selectedRow1, 1));
//            }
//        }
    }//GEN-LAST:event_selectReceiverConfirmButtonActionPerformed

    private void selectReceiverResetButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectReceiverResetButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_selectReceiverResetButtonMouseExited

    private void selectReceiverResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectReceiverResetButtonActionPerformed
        tableHealthcareProvider.clearSelection();
//        jLabel61.setText("-");
    }//GEN-LAST:event_selectReceiverResetButtonActionPerformed

    private void tableHealthcareProviderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHealthcareProviderMouseClicked
        DefaultTableModel tableModel = (DefaultTableModel) tableHealthcareProvider.getModel();
        int selectedRow = tableHealthcareProvider.getSelectedRow();

        if (selectedRow >= 0) {
//            jLabel61.setText((String) tableModel.getValueAt(selectedRow, 0));
            hpIDSummaryLabel.setText((String) tableModel.getValueAt(selectedRow, 0));
            hpNameSummaryLabel.setText((String) tableModel.getValueAt(selectedRow, 1));
        }
    }//GEN-LAST:event_tableHealthcareProviderMouseClicked

    private void tableHealthcareProviderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableHealthcareProviderMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tableHealthcareProviderMouseEntered

    private void selectReceiverBackButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectReceiverBackButtonMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_selectReceiverBackButtonMouseExited

    private void selectReceiverBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectReceiverBackButtonActionPerformed
        tabDistribute1.setSelectedIndex(0);
        tabDistribute1.setEnabledAt(1, false);
        tabDistribute1.setEnabledAt(2, false);
    }//GEN-LAST:event_selectReceiverBackButtonActionPerformed

    private void selectQuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectQuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectQuantityFieldActionPerformed

    private void btnAddBatch1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddBatch1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddBatch1MouseExited

    private void btnAddBatch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBatch1ActionPerformed
        tabDistribute1.setSelectedIndex(0);
        tabDistribute1.setEnabledAt(1, false);
        tabDistribute1.setEnabledAt(2, false);
        tableProducts2.clearSelection();
//        jLabel54.setText("-");
    }//GEN-LAST:event_btnAddBatch1ActionPerformed

    private void btnConfirmDistributionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnConfirmDistributionMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConfirmDistributionMouseExited

    private void btnConfirmDistributionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmDistributionActionPerformed
        String type = "004";
        String senderID = distributor.getID();
        String batchNO = batchCodeSummaryLabel.getText();
        String UPC = upcSummaryLabel.getText();
        int quantity = Integer.parseInt(quantitySummaryLabel.getText());
        String receiverID = hpIDSummaryLabel.getText();
        String productName = productNameSummaryLabel.getText();
        String price = priceSummaryLabel.getText();
        String todayDate = LocalDate.now().toString();

        try {
            HealthcareProvider hp = Blockchain_Assignment.healthcareProviderController.getHealthcareProvider(receiverID);
            MySignature sig = new MySignature();
            PrivateKey privateKey = KeyAccess.getPrivateKey(distributor.getPrivateKeyPath());
            String transactionID = Helper.generateID("TX");
            String Transaction = type + "|" + senderID + "|" + receiverID + "|" + UPC + "|" + batchNO + "|" + quantity + "|" + price + "|" + productName + "|" + hp.getName() + "|" + hp.getContact() + "|" + hp.getCode() + "|" + todayDate;

            byte[] signature = sig.getSignature(Transaction, privateKey);
            String signedTranx = Transaction + "|" + Base64.getEncoder().encodeToString(signature) + "\n";
            String signedTransaction = transactionID + "|" + signedTranx;

            Files.write(Paths.get("src/Off_Chain/TransactionPoolDH"), signedTransaction.getBytes(), StandardOpenOption.APPEND);
            JOptionPane.showMessageDialog(this, "Distribution transaction confirmed and added to the pool.");
            tabDistribute1.setSelectedIndex(0);
            tabDistribute1.setEnabledAt(1, false);
            tabDistribute1.setEnabledAt(2, false);
            String selectedInventoryID = inventorySummaryLabel.getText();
            Inventory selectedInventory = inventoryController.getSpecificInventory(selectedInventoryID);
            
            inventoryController.updateInventoryQuantity(selectedInventory, quantity);
//            selectedInventory.setQuantity(quantity);

            loadInventoryTable();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while adding transaction to pool: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid quantity format. Please enter a valid integer value.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnConfirmDistributionActionPerformed

    private void btnClearAddPro6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearAddPro6MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnClearAddPro6MouseExited

    private void btnClearAddPro6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAddPro6ActionPerformed
        tabDistribute1.setSelectedIndex(1);
        tabDistribute1.setEnabledAt(0, false);
        tabDistribute1.setEnabledAt(2, false);
    }//GEN-LAST:event_btnClearAddPro6ActionPerformed

    private void tableProducts4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProducts4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableProducts4MouseClicked

    private void txtBookingID7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookingID7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBookingID7ActionPerformed

    private void btnBookingsAdd3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookingsAdd3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBookingsAdd3ActionPerformed

    private void btnBookingsAdd3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBookingsAdd3MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBookingsAdd3MouseExited

    private void tableProducts2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProducts2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableProducts2MouseClicked

    private void selectInventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectInventoryTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_selectInventoryTableMouseClicked

    private void selectPriceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPriceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectPriceFieldActionPerformed

    private void tabBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabBookingMouseClicked
        tabDistribute1.setEnabledAt(1, false);
        tabDistribute1.setEnabledAt(2, false);
    }//GEN-LAST:event_tabBookingMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DistributorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DistributorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DistributorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DistributorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new DistributorFrame(distributor, inventoryController, orderController, transactionController).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel batchCodeSummaryLabel;
    private javax.swing.JButton btnAddBatch1;
    private javax.swing.JButton btnAddProduct1;
    private javax.swing.JButton btnBookingsAdd3;
    private javax.swing.JButton btnClearAddPro6;
    private javax.swing.JButton btnConfirmDistribution;
    private javax.swing.JButton btnViewBatch;
    private javax.swing.JComboBox<String> healthcareProviderComboBox;
    private javax.swing.JLabel hpIDSummaryLabel;
    private javax.swing.JLabel hpNameSummaryLabel;
    private javax.swing.JLabel inventorySummaryLabel;
    private javax.swing.JTable inventoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblRapidCar11;
    private javax.swing.JLabel lblRapidCar12;
    private javax.swing.JLabel lblRapidCar2;
    private javax.swing.JLabel lblRapidCar5;
    private javax.swing.JLabel lblRapidCar6;
    private javax.swing.JLabel lblRapidCar7;
    private javax.swing.JLabel lblRapidCar8;
    private javax.swing.JLabel lblRapidCar9;
    private javax.swing.JComboBox<String> manufacturerComboBox;
    private javax.swing.JTable orderTable;
    private javax.swing.JPanel pnlBookRoom1;
    private javax.swing.JPanel pnlBookRoom3;
    private javax.swing.JPanel pnlBookRoom4;
    private javax.swing.JPanel pnlBookRoom5;
    private javax.swing.JPanel pnlBookRoom7;
    private javax.swing.JLabel priceSummaryLabel;
    private javax.swing.JLabel productNameSummaryLabel;
    private javax.swing.JLabel quantitySummaryLabel;
    private javax.swing.JComboBox<String> selectInventoryComboBox;
    private javax.swing.JButton selectInventoryConfirmButton;
    private javax.swing.JButton selectInventoryResetButoon;
    private javax.swing.JTable selectInventoryTable;
    private javax.swing.JTextField selectPriceField;
    private javax.swing.JTextField selectQuantityField;
    private javax.swing.JButton selectReceiverBackButton;
    private javax.swing.JButton selectReceiverConfirmButton;
    private javax.swing.JButton selectReceiverResetButton;
    private javax.swing.JLabel selectedTransactionLabelValue;
    private javax.swing.JTabbedPane tabBooking;
    private javax.swing.JTabbedPane tabDistribute1;
    private javax.swing.JTable tableHealthcareProvider;
    private javax.swing.JTable tableProducts2;
    private javax.swing.JTable tableProducts4;
    private javax.swing.JTable transactionTable;
    private javax.swing.JTextField txtBookingID7;
    private javax.swing.JLabel upcSummaryLabel;
    private javax.swing.JButton verifyTransactionButton;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.JOptionPane;
import model.Manufacturer;
import model.User;
import blockchain_assignment.Blockchain_Assignment;
import controller.DistributorController;
import controller.HealthcareProviderController;
import controller.ManufacturerController;
import model.Distributor;
import model.HealthcareProvider;

/**
 *
 * @author Yuan
 */
public class LoginMenu extends javax.swing.JFrame {

    private static ManufacturerController manufacturerController;
    private static HealthcareProviderController healthcareProviderController;
    private static DistributorController distributorController;
    /**
     * Creates new form LoginMenu
     * @param mc
     * @param dc
     * @param hpc
     */
    public LoginMenu(ManufacturerController mc, DistributorController dc, HealthcareProviderController hpc) {
        manufacturerController = mc;
        healthcareProviderController = hpc;
        distributorController = dc;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public User checkCredentials(String userID) {
        // Check if user has provided the correct credentials of an admin
//        ArrayList<Manufacturer> admins = Blockchain_Assignment.getManufacturers();
//        for (Manufacturer manufacturer : Manufacturers) {
//            if (userID.equals(manufacturer.getUserID()))
//                return manufacturer;
//        }

        // Check if user has provided the correct credentials of a distibuter
        // Invalid credentials
        return null;
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUserID = new javax.swing.JTextField();
        lblRapidCar3 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnSignUp = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtUserID.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        txtUserID.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtUserID.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        txtUserID.setPreferredSize(new java.awt.Dimension(21, 28));
        txtUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIDActionPerformed(evt);
            }
        });

        lblRapidCar3.setBackground(new java.awt.Color(0, 204, 204));
        lblRapidCar3.setFont(new java.awt.Font("Poppins Medium", 3, 36)); // NOI18N
        lblRapidCar3.setForeground(new java.awt.Color(0, 204, 204));
        lblRapidCar3.setText("Medical Supply Chain Login");

        jLabel42.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel42.setText("ID:");

        btnLogin.setBackground(new java.awt.Color(51, 153, 0));
        btnLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnSignUp.setBackground(new java.awt.Color(51, 153, 0));
        btnSignUp.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        btnSignUp.setForeground(new java.awt.Color(255, 255, 255));
        btnSignUp.setText("Sign Up");
        btnSignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignUpActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 204, 204));
        jButton4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Track and Trace");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel42)
                            .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(lblRapidCar3, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(btnSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(74, Short.MAX_VALUE)
                .addComponent(lblRapidCar3)
                .addGap(40, 40, 40)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(169, 169, 169))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserIDActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        try {

            String userID = txtUserID.getText().trim();
            boolean found = false;
            Manufacturer m = null;
            Distributor d = null;
            HealthcareProvider hp = null;

            // Determine the role of the user based on the input
            String role;
            if (userID.startsWith("M")) {
                role = "Manufacturer";
                m = manufacturerController.getManufacturer(userID);
                if (m != null) {
                    found = true;
                }
            } else if (userID.startsWith("D")) {
                role = "Distributor";
                d = distributorController.getDistributor(userID);
                if( d != null){
                    found = true;
                }
            } else if (userID.startsWith("H")) {
                role = "Healthcare_Provider";
                hp = healthcareProviderController.getHealthcareProvider(userID);
                if (hp != null) {
                    found = true;
                }
            } else {
                // If the user ID doesn't match any role, display an error message
                JOptionPane.showMessageDialog(this, "Invalid user ID. Please enter a valid ID.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!found) {
                JOptionPane.showMessageDialog(this, "User not found. Please register first.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // If the user exists and is found, open the corresponding frame
            switch (role) {
                case "Manufacturer" -> {
                    ManufacturerFrame manufacturerf = new ManufacturerFrame(m);
                    manufacturerf.setVisible(true);
                }
                case "Distributor" -> {
                    DistributorFrame distributerf = new DistributorFrame(d, Blockchain_Assignment.inventoryController, Blockchain_Assignment.orderController, Blockchain_Assignment.transactionController);
                    distributerf.setVisible(true);
                }
                case "Healthcare_Provider" -> {
                    HealthcareProviderFrame healthcareProviderf = new HealthcareProviderFrame(hp, Blockchain_Assignment.inventoryController, Blockchain_Assignment.orderController, Blockchain_Assignment.transactionController);
                    healthcareProviderf.setVisible(true);
                }
                default -> JOptionPane.showMessageDialog(this, "Invalid user ID. Please enter a valid ID.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            // Close the login GUI
            this.setVisible(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error occurred while logging in: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnSignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignUpActionPerformed
        RegistrationFrame registerf = new RegistrationFrame(Blockchain_Assignment.manufacturerController,Blockchain_Assignment.distributorController, Blockchain_Assignment.healthcareProviderController);
        registerf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnSignUpActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        TrackTraceFrame ttf = new TrackTraceFrame();
        ttf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginMenu(manufacturerController, distributorController, healthcareProviderController).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnSignUp;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel lblRapidCar3;
    private javax.swing.JTextField txtUserID;
    // End of variables declaration//GEN-END:variables
}
